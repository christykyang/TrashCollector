@model Trash.Models.Customer

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Details</h1>
<style>
    /* Set the size of the div element that contains the map */
    #map {
        height: 400px; /* The height is 400 pixels */
        width: 400px; /* The width is the width of the web page */
    }
</style>
<div class="row">
    <div id="map"></div>
    <script>

        // Initialize and add the map
        function initMap() {

            var options = {
                zoom:8,
                center:{lat:43.0389,lng:-87.9065}
            }

            var map = new google.maps.Map(document.getElementById('map'), options);

            var coords = data;
            //call addMark function
            addMarker({lat:43.0389,lng:-87.9065});
            addMarker({lat:43.0606,lng:-88.1065});
            addMarker({lat:43.0892,lng:-87.8876});
            //add marker function
            function addMarker(coords){
                var marker = new google.maps.Marker({
                    position:coords,
                    map:map
                });
            }
        }
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC1EFcPNZaoqx_naYg7PH_PZxWPpHtFt4c&callback=initMap">
    </script>
</div>
<div>
    <h4>Customer</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FirstName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LastName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PickUpDay)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PickUpDay)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StreetAddress)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StreetAddress)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.City)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.City)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.State)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.State)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Zipcode)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Zipcode)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Balance)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Balance)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OneTimePickUp)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OneTimePickUp)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StartSuspension)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StartSuspension)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EndSuspension)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EndSuspension)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.isSuspended)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.isSuspended)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>
