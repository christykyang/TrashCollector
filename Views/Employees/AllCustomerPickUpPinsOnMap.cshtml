@model IEnumerable<Trash.Models.Customer>

@{
    ViewData["Title"] = "AllCustomerPickUpPinsOnMap";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>AllCustomerPickUpPinsOnMap</h1>
<style>
    /* Set the size of the div element that contains the map */
    #map {
        height: 400px; /* The height is 400 pixels */
        width: 400px; /* The width is the width of the web page */
    }
</style>
<div class="row">
    <div id="map"></div>
    <script>

        // Initialize and add the map
        function initMap() {

            var options = {
                zoom: 8,
                center: { lat: 43.0389, lng: -87.9065 }
            }

            var map = new google.maps.Map(document.getElementById('map'), options);

            var coords = data;
            //call addMark function
            addMarker({ lat: 43.0389, lng: -87.9065 });
            addMarker({ lat: 43.0606, lng: -88.1065 });
            addMarker({ lat: 43.0892, lng: -87.8876 });
            //add marker function
            function addMarker(coords) {
                var marker = new google.maps.Marker({
                    position: coords,
                    map: map
                });
            }
        }
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC1EFcPNZaoqx_naYg7PH_PZxWPpHtFt4c&callback=initMap">
    </script>
    <p>
        <a asp-action="Create">Create New</a>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.FirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PickUpDay)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StreetAddress)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.City)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.State)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Zipcode)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Balance)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OneTimePickUp)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StartSuspension)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EndSuspension)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.isSuspended)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IdentityUser)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PickUpDay)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StreetAddress)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.City)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.State)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Zipcode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Balance)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OneTimePickUp)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartSuspension)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndSuspension)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.isSuspended)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IdentityUser.Id)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.CustomerId">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.CustomerId">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.CustomerId">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
